# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type User {
    id: ID!
    username: String
    full_name: String
    email: String
    phone: String
    avatar: String
    bio: String
    birthday: String
    gender: Boolean
    role: Boolean
    active: Boolean
    is_private: Boolean

    created_at: String
    updated_at: String
    deleted_at: String
}

type UserSearch {
    id: ID
    username: String
    full_name: String
    avatar: String
    active: Boolean
}

type UserSuggestion {
    id: ID
    username: String
    full_name: String
    avatar: String
    active: Boolean
}

type Post {
    id: ID!
    user_id: ID!
    caption: String!
    is_hide_like: Boolean!
    is_hide_comment: Boolean!
    active: Boolean!

    user: User
    post_files: [PostFile]
    post_likes: [PostLike]
    post_comments: [PostComment]

    created_at: String!
    updated_at: String
    deleted_at: String
}

type PostFile {
    id: ID
    post_id: ID
    url: String
    type: String
    active: Boolean
    created_at: String
    updated_at: String
    deleted_at: String
}

type PostLike {
    id: ID
    post_id: ID
    user_id: ID
    is_liked: Boolean
    created_at: String
    updated_at: String
    deleted_at: String
}

type PostComment {
    id: ID
    post_id: ID
    user_id: ID
    content: String
    active: Boolean
    created_at: String
    updated_at: String
    deleted_at: String
}

type UserProfile {
    username: String!
    user: User!
    posts: [Post!]!
    friends: [Friend!]!
}

type Friend {
    id: ID!
    from_user_id: ID!
    to_user_id: ID!
    status: Int

    from_user_info: User
    to_user_info: User

    created_at: String
    updated_at: String
    deleted_at: String
}

type Inbox {
    id: ID!
    from_user_id: ID!
    to_user_id: ID!
    message: String
    is_read: Boolean

    files: [InboxFile]

    from_user_info: User
    to_user_info: User

    created_at: String
    updated_at: String
    deleted_at: String
}

type InboxFile {
    id: ID!
    inbox_id: ID!
    type: String
    url: String
    active: Boolean

    created_at: String
    updated_at: String
    deleted_at: String
}

type InboxGetAllBubble {
    username: String!
    full_name: String!
    avatar: String!
    last_message: String!
    is_read: Boolean!

    created_at: String!
}

type Query {
    # users
    userByUsername(username: String!): User!
    userProfile(username: String!): UserProfile!
    userSearch(keyword: String!): [UserSearch!]!
    userSuggestion(count: Int!): [UserSuggestion!]!
    # posts
    postByUsername(username: String!): [Post!]!
    postHomePage(count: Int!): [Post!]!
    #
    inboxGetByUsername(username: String!): [Inbox!]!
    inboxGetAllBubble: [InboxGetAllBubble!]!
}

#input NewTodo {
#    text: String!
#    userId: String!
#}
#
#type Mutation {
#    createTodo(input: NewTodo!): User!
#}
